{# Underscore templates for the uploader #}
{% include "FileFileBundle::fileUploadTemplate.html.twig" %}

<form class="edit-form" action="{{ action_path }}" method="post" enctype="multipart/form-data">      

    {% set isNew = true %}
    {% if entity.id %}
        {% set isNew = false %}
    {% endif %}    

    {# Hydrated by javascript #}
    <div class="file-uploader"></div>

    <button class="btn btn-success" type="submit">{% trans %}file.save{% endtrans %}</button>
    {% if cancel_path %}
        <a class="btn" href="{{ path(cancel_path) }}">{% trans %}file.cancel{% endtrans %}</a>
    {%  endif %}
    <!--{% if not isNew and delete_path %}
        <a class="btn btn-danger" href="{{ path(delete_path, { id: entity.id } ) }}">{% trans %}delete{% endtrans %}</a>
    {% endif %}-->

    </form>

    <script type="text/javascript">

        // Enable the file uploader

        $(function () {
            new PunkAveFileUploader({
                'uploadUrl': "{{ path(upload_url, { editId: editId }) | raw }}",
                'viewUrl': "{{ asset(upload_view_url ~ editId | raw) }}",
                'el': '.file-uploader',
                'existingFiles':{{ punkave_get_files(upload_folder ~ editId) | json_encode | raw }},
                        'delaySubmitWhileUploading': '.edit-form',
                'errorCallback': function (errorObj) {
                    if (errorObj.error == 'maxNumberOfFiles') {
                        alert("Maximum uploaded files exceeded!");
                    }
                }
            });
        });
    </script>