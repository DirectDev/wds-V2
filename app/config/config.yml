imports:
    - { resource: config_user.yml }
    - { resource: config_translation.yml }
    - { resource: config_geocode.yml }
    - { resource: parameters.yml }
    - { resource: social_parameters.yml }
    - { resource: contact_parameters.yml }
    - { resource: upload_parameters.yml }
    - { resource: security.yml }
    - { resource: ../../vendor/knplabs/doctrine-behaviors/config/orm-services.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ['127.0.0.1'] # for geocode bundle
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        facebook_app_id: "%facebook_app_id%"
        google_app_id: "%google_app_id%"
        google_map_api_key: "%google_map_api_key%"
        upload_url: "%upload_url%"
        upload_view_url: "%upload_view_url%"
        upload_folder: "%upload_folder%"
        upload_web_base_path: "%upload_web_base_path%"
        max_event_list : 9

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        dql:
          string_functions:
            acos: DoctrineExtensions\Query\Mysql\Acos
            asin: DoctrineExtensions\Query\Mysql\Asin
            atan2: DoctrineExtensions\Query\Mysql\Atan2
            atan: DoctrineExtensions\Query\Mysql\Atan
            charlength: DoctrineExtensions\Query\Mysql\CharLength
            concatws: DoctrineExtensions\Query\Mysql\ConcatWs
            cos: DoctrineExtensions\Query\Mysql\Cos
            cot: DoctrineExtensions\Query\Mysql\Cot
            countif: DoctrineExtensions\Query\Mysql\CountIf
            dateadd: DoctrineExtensions\Query\Mysql\DateAdd
            datediff: DoctrineExtensions\Query\Mysql\DateDiff
            day: DoctrineExtensions\Query\Mysql\Day
            degrees: DoctrineExtensions\Query\Mysql\Degrees
            field: DoctrineExtensions\Query\Mysql\Field
            findinset: DoctrineExtensions\Query\Mysql\FindInSet
            groupconcat: DoctrineExtensions\Query\Mysql\GroupConcat
            ifelse: DoctrineExtensions\Query\Mysql\IfElse
            ifnull: DoctrineExtensions\Query\Mysql\IfNull
            matchagainst: DoctrineExtensions\Query\Mysql\MatchAgainst
            md5: DoctrineExtensions\Query\Mysql\Md5
            month: DoctrineExtensions\Query\Mysql\Month
            nullif: DoctrineExtensions\Query\Mysql\NullIf
            radians: DoctrineExtensions\Query\Mysql\Radians
            sha1: DoctrineExtensions\Query\Mysql\Sha1
            sha2: DoctrineExtensions\Query\Mysql\Sha2
            sin: DoctrineExtensions\Query\Mysql\Sin
            strtodate: DoctrineExtensions\Query\Mysql\StrToDate
            tan: DoctrineExtensions\Query\Mysql\Tan
            timestampdiff: DoctrineExtensions\Query\Mysql\TimestampDiff
            week: DoctrineExtensions\Query\Mysql\Week
            year: DoctrineExtensions\Query\Mysql\Year
            
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
#    spool:     { type: memory }
    auth_mode: "%mailer_auth_mode%"
    port:      "%mailer_port%"
    encryption:      "%mailer_encryption%"
    
# Avalanche Imagine (thumbnails)
liip_imagine:
    resolvers:
        default:
            web_path:
              web_root: %kernel.root_dir%/../www
              cache_prefix: media/cache
    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../www/
    driver:               gd
    cache:                default
    data_loader:          default
    default_image:        null
    controller:
        filter_action:         liip_imagine.controller:filterAction
        filter_runtime_action: liip_imagine.controller:filterRuntimeAction
    filter_sets:
        home_thumb:
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                thumbnail: { size: [350, 200], mode: outbound }
        loggedin:
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                thumbnail: { size: [30, 30], mode: outbound }     
        card_profile_picture:        
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                thumbnail: { size: [55, 55], mode: outbound }  
        member_photo:        
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                upscale: { min: [200, 200] } 
                thumbnail: { size: [200, 200], mode: inbound }
        city_thumb:        
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                thumbnail: { size: [100, 100], mode: outbound }         
        event:        
            quality:              100
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:
                # min size
                upscale: { min: [389, 246] } 
                thumbnail: { size: [389, 246], mode: outbound }         

# Services
services:
    twig.text_extension:
        class: Twig_Extensions_Extension_Text
        tags:
            - name: twig.extension    
           
    punk_ave.file_uploader:
        class: PunkAve\FileUploaderBundle\Services\FileUploader
        arguments:
          - file_base_path: '%file_uploader.file_base_path%'
            web_base_path: '%file_uploader.web_base_path%'
            request: '@request'
            file_manager: '@punk_ave.file_uploader_file_manager'
            allowed_extensions: '%file_uploader.allowed_extensions%'
            sizes: '%file_uploader.sizes%'
            originals: '%file_uploader.originals%'
            max_number_of_files: '%file_uploader.max_number_of_files%'
        scope: request

      # You usually won't need this sub-service directly,
      # however you can access it from a command, which is
      # convenient if you need to delete files relating to
      # something in a command context
    punk_ave.file_uploader_file_manager:
        class: PunkAve\FileUploaderBundle\Services\FileManager
        arguments:
          # For bc reasons we're not changing the names of the parameters
          - file_base_path: '%file_uploader.file_base_path%'

    punk_ave.twig.file_extension:
        class: PunkAve\FileUploaderBundle\Twig\FileExtension
        arguments: [@service_container]
        tags:
            - { name: twig.extension }     
            
    datecompare.validator:
        class: Front\FrontBundle\Validator\Constraints\DateCompareValidator
        tags:
            - { name: validator.constraint_validator, alias: datecompare_validator }         
                     
